{"dependencies":[{"name":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\input-core\\package.json","includedInParent":true,"mtime":1529685958507},{"name":"C:\\Users\\pc\\Desktop\\module_3\\package.json","includedInParent":true,"mtime":1529685959824},{"name":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\input-core\\.babelrc","includedInParent":true,"mtime":1511339685000},{"name":"../constants/charTypesEnum.js","loc":{"line":8,"column":29},"parent":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\input-core\\lib\\functions\\inputValue.js","resolved":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\input-core\\lib\\constants\\charTypesEnum.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = inputValue;\n\nvar _charTypesEnum = require('../constants/charTypesEnum.js');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction inputValue(_ref) {\n    var data = _ref.data,\n        _ref$input = _ref.input,\n        input = _ref$input === undefined ? '' : _ref$input,\n        selection = _ref.selection,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var value = [];\n    var maskedValue = '';\n\n    var maskIndex = 0;\n    var valueIndex = 0;\n    var pastedIndex = 0;\n\n    var inputValuesApplied = 0;\n\n    while (mask[maskIndex]) {\n        var item = data.length > valueIndex ? data[valueIndex] : null;\n        var maskPart = mask[maskIndex];\n\n        var pastedValuesStack = null;\n        if (selection.start <= maskIndex && pastedIndex < input.length) {\n            pastedValuesStack = input.slice(pastedIndex);\n        }\n\n        // Обработка захардкоженных в маску символов. \n        if (maskPart.char) {\n            // Если есть вводимые пользователем значение, в первую очередь проверяем его.\n            // Но не проверяем по всему стеку.\n            if (pastedValuesStack && pastedValuesStack[0] === maskPart.char) {\n                pastedIndex++;\n            } else {\n                if (item && (item.char === maskPart.char || item.type !== _charTypesEnum2.default.USER) || input) {\n                    valueIndex++;\n                }\n            }\n\n            value.push({\n                char: maskPart.char,\n                type: _charTypesEnum2.default.CHAR\n            });\n\n            if (pastedValuesStack) {\n                inputValuesApplied++;\n            }\n\n            maskedValue += maskPart.char;\n        }\n\n        // Кастомный текст\n        if (maskPart.regexp) {\n            var part = null;\n\n            // Если есть вводимое пользователем значение, то проверям его. \n            // Причем пробегаемся по стеку вводимых значений, пока не найдем нужное\n            if (pastedValuesStack) {\n                var i = 0;\n                while (!maskPart.regexp.test(pastedValuesStack[i]) && pastedValuesStack.length > i) {\n                    i++;\n                    pastedIndex++;\n                }\n                if (pastedValuesStack.length > i) {\n                    pastedIndex++;\n                    inputValuesApplied++;\n\n                    // Игнорируем предыдущее значение в инпуте\n                    valueIndex++;\n\n                    part = pastedValuesStack[i];\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += part;\n                }\n            }\n\n            // В пользовательском вводе нет или невалидные данные. Пытаемся аплаить те данные, что были раньше или заменяем на плейсхолдер\n            if (!part) {\n                // Если произошел сдвиг, пропускаем лишнее значение\n                if (item && item.type === _charTypesEnum2.default.CHAR && data.length > valueIndex + 1) {\n                    valueIndex++;\n                    continue;\n                }\n                if (item && item.type === _charTypesEnum2.default.USER && maskPart.regexp.test(item.char)) {\n                    value.push({\n                        char: item.char,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += item.char;\n                    valueIndex++;\n                } else {\n                    part = maskString ? maskString[maskIndex] : maskChar;\n\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.MASK\n                    });\n\n                    if (data.length > maskIndex) {\n                        valueIndex++;\n                    }\n\n                    maskedValue += part;\n                }\n            }\n        }\n\n        maskIndex++;\n    }\n\n    var selectionPosition = selection.start + inputValuesApplied;\n\n    // Удаляем все ведующие maskChar\n    var bound = value.length - 1;\n    var charsCount = 0;\n    while (bound >= 0 && value[bound].type !== _charTypesEnum2.default.USER) {\n        if (value[bound].type === _charTypesEnum2.default.MASK) {\n            charsCount = 0;\n        }\n        if (value[bound].type === _charTypesEnum2.default.CHAR) {\n            charsCount++;\n        }\n        bound--;\n    }\n    bound += charsCount;\n\n    var visibleValue = '';\n    for (var _i = 0; _i <= bound; _i++) {\n        visibleValue += value[_i].char;\n    }\n\n    return {\n        value: value,\n        visibleValue: visibleValue,\n        maskedValue: maskedValue,\n        selection: {\n            start: selectionPosition,\n            end: selectionPosition\n        }\n    };\n}","map":{"mappings":[{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\input-core\\lib\\functions\\inputValue.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}}],"sources":{"node_modules\\input-core\\lib\\functions\\inputValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = inputValue;\n\nvar _charTypesEnum = require('../constants/charTypesEnum.js');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction inputValue(_ref) {\n    var data = _ref.data,\n        _ref$input = _ref.input,\n        input = _ref$input === undefined ? '' : _ref$input,\n        selection = _ref.selection,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var value = [];\n    var maskedValue = '';\n\n    var maskIndex = 0;\n    var valueIndex = 0;\n    var pastedIndex = 0;\n\n    var inputValuesApplied = 0;\n\n    while (mask[maskIndex]) {\n        var item = data.length > valueIndex ? data[valueIndex] : null;\n        var maskPart = mask[maskIndex];\n\n        var pastedValuesStack = null;\n        if (selection.start <= maskIndex && pastedIndex < input.length) {\n            pastedValuesStack = input.slice(pastedIndex);\n        }\n\n        // Обработка захардкоженных в маску символов. \n        if (maskPart.char) {\n            // Если есть вводимые пользователем значение, в первую очередь проверяем его.\n            // Но не проверяем по всему стеку.\n            if (pastedValuesStack && pastedValuesStack[0] === maskPart.char) {\n                pastedIndex++;\n            } else {\n                if (item && (item.char === maskPart.char || item.type !== _charTypesEnum2.default.USER) || input) {\n                    valueIndex++;\n                }\n            }\n\n            value.push({\n                char: maskPart.char,\n                type: _charTypesEnum2.default.CHAR\n            });\n\n            if (pastedValuesStack) {\n                inputValuesApplied++;\n            }\n\n            maskedValue += maskPart.char;\n        }\n\n        // Кастомный текст\n        if (maskPart.regexp) {\n            var part = null;\n\n            // Если есть вводимое пользователем значение, то проверям его. \n            // Причем пробегаемся по стеку вводимых значений, пока не найдем нужное\n            if (pastedValuesStack) {\n                var i = 0;\n                while (!maskPart.regexp.test(pastedValuesStack[i]) && pastedValuesStack.length > i) {\n                    i++;\n                    pastedIndex++;\n                }\n                if (pastedValuesStack.length > i) {\n                    pastedIndex++;\n                    inputValuesApplied++;\n\n                    // Игнорируем предыдущее значение в инпуте\n                    valueIndex++;\n\n                    part = pastedValuesStack[i];\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += part;\n                }\n            }\n\n            // В пользовательском вводе нет или невалидные данные. Пытаемся аплаить те данные, что были раньше или заменяем на плейсхолдер\n            if (!part) {\n                // Если произошел сдвиг, пропускаем лишнее значение\n                if (item && item.type === _charTypesEnum2.default.CHAR && data.length > valueIndex + 1) {\n                    valueIndex++;\n                    continue;\n                }\n                if (item && item.type === _charTypesEnum2.default.USER && maskPart.regexp.test(item.char)) {\n                    value.push({\n                        char: item.char,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += item.char;\n                    valueIndex++;\n                } else {\n                    part = maskString ? maskString[maskIndex] : maskChar;\n\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.MASK\n                    });\n\n                    if (data.length > maskIndex) {\n                        valueIndex++;\n                    }\n\n                    maskedValue += part;\n                }\n            }\n        }\n\n        maskIndex++;\n    }\n\n    var selectionPosition = selection.start + inputValuesApplied;\n\n    // Удаляем все ведующие maskChar\n    var bound = value.length - 1;\n    var charsCount = 0;\n    while (bound >= 0 && value[bound].type !== _charTypesEnum2.default.USER) {\n        if (value[bound].type === _charTypesEnum2.default.MASK) {\n            charsCount = 0;\n        }\n        if (value[bound].type === _charTypesEnum2.default.CHAR) {\n            charsCount++;\n        }\n        bound--;\n    }\n    bound += charsCount;\n\n    var visibleValue = '';\n    for (var _i = 0; _i <= bound; _i++) {\n        visibleValue += value[_i].char;\n    }\n\n    return {\n        value: value,\n        visibleValue: visibleValue,\n        maskedValue: maskedValue,\n        selection: {\n            start: selectionPosition,\n            end: selectionPosition\n        }\n    };\n}"},"lineCount":157}},"hash":"32b67fbe6f1d18932a42d4cac2bc6569","cacheData":{"env":{}},"id":16}
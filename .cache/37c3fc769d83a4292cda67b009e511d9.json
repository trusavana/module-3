{"dependencies":[{"name":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\mask-input\\package.json","includedInParent":true,"mtime":1529689887333},{"name":"C:\\Users\\pc\\Desktop\\module_3\\package.json","includedInParent":true,"mtime":1529685959824},{"name":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\mask-input\\.babelrc","includedInParent":true,"mtime":1517952704000},{"name":"input-core","loc":{"line":9,"column":25},"parent":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\mask-input\\lib\\maskInput.js","resolved":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\input-core\\lib\\inputCore.js"},{"name":"subscribe-event","loc":{"line":11,"column":30},"parent":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\mask-input\\lib\\maskInput.js","resolved":"C:\\Users\\pc\\Desktop\\module_3\\node_modules\\subscribe-event\\subscribe.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _inputCore = require('input-core');\n\nvar _subscribeEvent = require('subscribe-event');\n\nvar _subscribeEvent2 = _interopRequireDefault(_subscribeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * Adapter of react-maskInput to vanilaJs\n */\n\nvar MaskInput = function () {\n  function MaskInput(element, _ref) {\n    var _this = this;\n\n    var _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? _inputCore.defaults.mask : _ref$mask,\n        _ref$value = _ref.value,\n        value = _ref$value === undefined ? '' : _ref$value,\n        reformat = _ref.reformat,\n        maskString = _ref.maskString,\n        _ref$maskChar = _ref.maskChar,\n        maskChar = _ref$maskChar === undefined ? _inputCore.defaults.maskChar : _ref$maskChar,\n        _ref$maskFormat = _ref.maskFormat,\n        maskFormat = _ref$maskFormat === undefined ? _inputCore.defaults.maskFormat : _ref$maskFormat,\n        showMask = _ref.showMask,\n        alwaysShowMask = _ref.alwaysShowMask,\n        onChange = _ref.onChange;\n\n    _classCallCheck(this, MaskInput);\n\n    this.showValue = function () {\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.element.value = _this.input.getMaskedValue();\n        return;\n      }\n      _this.element.value = _this.input.getVisibleValue();\n    };\n\n    this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n      var selection = _this.input.getSelection();\n      _this.element.setSelectionRange(selection.start, selection.end);\n\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      };\n      // For android\n      raf(function () {\n        return _this.element.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    this.onPaste = function (e) {\n      e.preventDefault();\n      _this.getSelection();\n\n      // getData value needed for IE also works in FF & Chrome\n      _this.input.paste(e.clipboardData.getData('Text'));\n\n      _this.showValue();\n\n      // Timeout needed for IE\n      setTimeout(_this.setSelection, 0);\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onChange = function (e) {\n      var currentValue = void 0;\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getMaskedValue();\n      } else {\n        currentValue = _this.input.getVisibleValue();\n      }\n\n      // fix conflict by update value in mask model\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n        _this.input.setValue(e.target.value);\n\n        _this.showValue();\n\n        setTimeout(_this.setSelection, 0);\n      }\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this.getSelection();\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n      _this.showValue();\n      _this.setSelection();\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removePreviosOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removeNextOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n    };\n\n    this.onFocus = function () {\n      _this.canSetSelection = true;\n    };\n\n    this.onBlur = function () {\n      _this.canSetSelection = false;\n    };\n\n    this.input = this.input = (0, _inputCore.createInput)({\n      value: value,\n      reformat: reformat,\n      maskString: maskString,\n      maskChar: maskChar,\n      mask: mask,\n      maskFormat: maskFormat\n    });\n\n    this.props = {\n      mask: mask,\n      value: value,\n      reformat: reformat,\n      maskChar: maskChar,\n      maskFormat: maskFormat,\n      maskString: maskString,\n      showMask: showMask,\n      alwaysShowMask: alwaysShowMask,\n      onChange: onChange\n    };\n\n    this.showMask = alwaysShowMask || showMask;\n\n    this.element = element;\n    this.showValue();\n    this.subscribe();\n  }\n\n  _createClass(MaskInput, [{\n    key: 'getSelection',\n    value: function getSelection() {\n      this.input.setSelection({\n        start: this.element.selectionStart,\n        end: this.element.selectionEnd\n      });\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      this.unsubscribe = {\n        onPaste: (0, _subscribeEvent2.default)(this.element, 'paste', this.onPaste),\n        onKeyDown: (0, _subscribeEvent2.default)(this.element, 'keydown', this.onKeyDown),\n        onKeyPress: (0, _subscribeEvent2.default)(this.element, this.keyPressPropName(), this.onKeyPress),\n        onChange: (0, _subscribeEvent2.default)(this.element, 'change', this.onChange),\n        onFocus: (0, _subscribeEvent2.default)(this.element, 'focus', this.onFocus),\n        onBlur: (0, _subscribeEvent2.default)(this.element, 'blur', this.onBlur)\n      };\n    }\n  }, {\n    key: 'keyPressPropName',\n    value: function keyPressPropName() {\n      if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n        return 'beforeinput';\n      }\n      return 'keypress';\n    }\n  }, {\n    key: 'setProps',\n    value: function setProps(_ref2) {\n      var mask = _ref2.mask,\n          value = _ref2.value,\n          reformat = _ref2.reformat,\n          maskString = _ref2.maskString,\n          maskChar = _ref2.maskChar,\n          maskFormat = _ref2.maskFormat,\n          showMask = _ref2.showMask,\n          alwaysShowMask = _ref2.alwaysShowMask,\n          onChange = _ref2.onChange;\n\n      var updated = false;\n\n      if (this.props.onChange !== onChange) {\n        this.props.onChange = onChange;\n      }\n\n      if (this.props.alwaysShowMask !== alwaysShowMask || this.props.showMask !== showMask) {\n        this.showMask = alwaysShowMask || showMask;\n\n        this.props.alwaysShowMask = alwaysShowMask;\n        this.props.showMask = showMask;\n\n        updated = true;\n      }\n\n      if (maskFormat && maskFormat !== this.props.maskFormat) {\n        this.input.setMaskFormat(maskFormat);\n\n        this.props.maskFormat = maskFormat;\n\n        updated = true;\n      }\n\n      if (mask !== this.props.mask) {\n        this.input.setMask(mask);\n\n        this.props.mask = mask;\n\n        updated = true;\n      }\n\n      if (maskString !== this.props.maskString) {\n        this.input.setMaskString(maskString);\n\n        this.props.maskString = maskString;\n\n        updated = true;\n      }\n\n      if (maskChar !== this.props.maskChar) {\n        this.input.setMaskChar(maskChar);\n\n        this.props.maskChar = maskChar;\n\n        updated = true;\n      }\n\n      if (reformat !== this.props.reformat) {\n        this.input.setReformat(reformat);\n\n        this.props.reformat = reformat;\n\n        updated = true;\n      }\n\n      if (value !== this.props.value) {\n        this.input.setValue(value);\n\n        this.props.value = value;\n\n        updated = true;\n      }\n\n      if (updated) {\n        this.showValue();\n        this.setSelection();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.unsubscribe.onPaste();\n      this.unsubscribe.onKeyDown();\n      this.unsubscribe.onKeyPress();\n      this.unsubscribe.onChange();\n      this.unsubscribe.onFocus();\n      this.unsubscribe.onBlur();\n    }\n  }]);\n\n  return MaskInput;\n}();\n\nexports.default = MaskInput;","map":{"mappings":[{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules\\mask-input\\lib\\maskInput.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}}],"sources":{"node_modules\\mask-input\\lib\\maskInput.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _inputCore = require('input-core');\n\nvar _subscribeEvent = require('subscribe-event');\n\nvar _subscribeEvent2 = _interopRequireDefault(_subscribeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * Adapter of react-maskInput to vanilaJs\n */\n\nvar MaskInput = function () {\n  function MaskInput(element, _ref) {\n    var _this = this;\n\n    var _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? _inputCore.defaults.mask : _ref$mask,\n        _ref$value = _ref.value,\n        value = _ref$value === undefined ? '' : _ref$value,\n        reformat = _ref.reformat,\n        maskString = _ref.maskString,\n        _ref$maskChar = _ref.maskChar,\n        maskChar = _ref$maskChar === undefined ? _inputCore.defaults.maskChar : _ref$maskChar,\n        _ref$maskFormat = _ref.maskFormat,\n        maskFormat = _ref$maskFormat === undefined ? _inputCore.defaults.maskFormat : _ref$maskFormat,\n        showMask = _ref.showMask,\n        alwaysShowMask = _ref.alwaysShowMask,\n        onChange = _ref.onChange;\n\n    _classCallCheck(this, MaskInput);\n\n    this.showValue = function () {\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.element.value = _this.input.getMaskedValue();\n        return;\n      }\n      _this.element.value = _this.input.getVisibleValue();\n    };\n\n    this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n      var selection = _this.input.getSelection();\n      _this.element.setSelectionRange(selection.start, selection.end);\n\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      };\n      // For android\n      raf(function () {\n        return _this.element.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    this.onPaste = function (e) {\n      e.preventDefault();\n      _this.getSelection();\n\n      // getData value needed for IE also works in FF & Chrome\n      _this.input.paste(e.clipboardData.getData('Text'));\n\n      _this.showValue();\n\n      // Timeout needed for IE\n      setTimeout(_this.setSelection, 0);\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onChange = function (e) {\n      var currentValue = void 0;\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getMaskedValue();\n      } else {\n        currentValue = _this.input.getVisibleValue();\n      }\n\n      // fix conflict by update value in mask model\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n        _this.input.setValue(e.target.value);\n\n        _this.showValue();\n\n        setTimeout(_this.setSelection, 0);\n      }\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this.getSelection();\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n      _this.showValue();\n      _this.setSelection();\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removePreviosOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removeNextOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n    };\n\n    this.onFocus = function () {\n      _this.canSetSelection = true;\n    };\n\n    this.onBlur = function () {\n      _this.canSetSelection = false;\n    };\n\n    this.input = this.input = (0, _inputCore.createInput)({\n      value: value,\n      reformat: reformat,\n      maskString: maskString,\n      maskChar: maskChar,\n      mask: mask,\n      maskFormat: maskFormat\n    });\n\n    this.props = {\n      mask: mask,\n      value: value,\n      reformat: reformat,\n      maskChar: maskChar,\n      maskFormat: maskFormat,\n      maskString: maskString,\n      showMask: showMask,\n      alwaysShowMask: alwaysShowMask,\n      onChange: onChange\n    };\n\n    this.showMask = alwaysShowMask || showMask;\n\n    this.element = element;\n    this.showValue();\n    this.subscribe();\n  }\n\n  _createClass(MaskInput, [{\n    key: 'getSelection',\n    value: function getSelection() {\n      this.input.setSelection({\n        start: this.element.selectionStart,\n        end: this.element.selectionEnd\n      });\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      this.unsubscribe = {\n        onPaste: (0, _subscribeEvent2.default)(this.element, 'paste', this.onPaste),\n        onKeyDown: (0, _subscribeEvent2.default)(this.element, 'keydown', this.onKeyDown),\n        onKeyPress: (0, _subscribeEvent2.default)(this.element, this.keyPressPropName(), this.onKeyPress),\n        onChange: (0, _subscribeEvent2.default)(this.element, 'change', this.onChange),\n        onFocus: (0, _subscribeEvent2.default)(this.element, 'focus', this.onFocus),\n        onBlur: (0, _subscribeEvent2.default)(this.element, 'blur', this.onBlur)\n      };\n    }\n  }, {\n    key: 'keyPressPropName',\n    value: function keyPressPropName() {\n      if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n        return 'beforeinput';\n      }\n      return 'keypress';\n    }\n  }, {\n    key: 'setProps',\n    value: function setProps(_ref2) {\n      var mask = _ref2.mask,\n          value = _ref2.value,\n          reformat = _ref2.reformat,\n          maskString = _ref2.maskString,\n          maskChar = _ref2.maskChar,\n          maskFormat = _ref2.maskFormat,\n          showMask = _ref2.showMask,\n          alwaysShowMask = _ref2.alwaysShowMask,\n          onChange = _ref2.onChange;\n\n      var updated = false;\n\n      if (this.props.onChange !== onChange) {\n        this.props.onChange = onChange;\n      }\n\n      if (this.props.alwaysShowMask !== alwaysShowMask || this.props.showMask !== showMask) {\n        this.showMask = alwaysShowMask || showMask;\n\n        this.props.alwaysShowMask = alwaysShowMask;\n        this.props.showMask = showMask;\n\n        updated = true;\n      }\n\n      if (maskFormat && maskFormat !== this.props.maskFormat) {\n        this.input.setMaskFormat(maskFormat);\n\n        this.props.maskFormat = maskFormat;\n\n        updated = true;\n      }\n\n      if (mask !== this.props.mask) {\n        this.input.setMask(mask);\n\n        this.props.mask = mask;\n\n        updated = true;\n      }\n\n      if (maskString !== this.props.maskString) {\n        this.input.setMaskString(maskString);\n\n        this.props.maskString = maskString;\n\n        updated = true;\n      }\n\n      if (maskChar !== this.props.maskChar) {\n        this.input.setMaskChar(maskChar);\n\n        this.props.maskChar = maskChar;\n\n        updated = true;\n      }\n\n      if (reformat !== this.props.reformat) {\n        this.input.setReformat(reformat);\n\n        this.props.reformat = reformat;\n\n        updated = true;\n      }\n\n      if (value !== this.props.value) {\n        this.input.setValue(value);\n\n        this.props.value = value;\n\n        updated = true;\n      }\n\n      if (updated) {\n        this.showValue();\n        this.setSelection();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.unsubscribe.onPaste();\n      this.unsubscribe.onKeyDown();\n      this.unsubscribe.onKeyPress();\n      this.unsubscribe.onChange();\n      this.unsubscribe.onFocus();\n      this.unsubscribe.onBlur();\n    }\n  }]);\n\n  return MaskInput;\n}();\n\nexports.default = MaskInput;"},"lineCount":303}},"hash":"cea0f7a51499891b1f187d41e1b48ae4","cacheData":{"env":{}},"id":9}